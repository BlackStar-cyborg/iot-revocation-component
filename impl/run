#!/bin/env bash
# Script based off of https://github.com/hyperledger/aries-cloudagent-python/blob/main/demo/run_demo

set -e
# set -v # verbosity for debugging
set -o pipefail

# on Windows, docker run needs to be prefixed by winpty
if [ "$OSTYPE" == "msys" ]; then
    DOCKER="winpty docker"
else
    DOCKER=${DOCKER:-docker}
fi

function print_usage {
    cat <<EOF
Run an Aries agent with below options.
Usage:
    Agent related flags:
        -t, --type [string]:
            What type of Aries agent to be run, currently available:
                Node: Agents handling IoT devices
                Issuer: Agents handling admin side in Maintainer Domain
            REQUIRES: a 'port' and a 'name', 'multinenacy' optional.
        -p, --port [number]:
            port number at which to operate
        -n, --name [string]:
            Name of the Agent type to be run
        --multitenant:
            Enables support for multinenacy, i.e., holding walltes for sub-agents.

    Indepedendent flags:
        -a, --auditor:
            Runs only the auditor and no Aries logic, can only be run in combination with the port flag.
        -u, --updater:
            Runs only the updater and no Aries logic, user WITHOUT other flags.
        -h, --help:
            Print help/usage
EOF
}

# Set flag variables
MULTITENANT=0
AUDITOR=0
UPDATER=0
# Docker specific variables
DOCKER_IMAGE_NAME="aries-my-agent"
RUN_MODE="docker"
DOCKERHOST=$(./scripts/getDockerHost.sh)
DOCKER_NETWORK="bridge" # bridge or host
# Aries/Indy specific variables
LEDGER_URL="http://$DOCKERHOST:9000"
GENESIS_URL="$LEDGER_URL/genesis"

while [[ $# -gt 0 ]]; do
    case $1 in
        -p | --port)
            PORT=$2
            # We define a portrange of +9 for each agent
            PORTRANGE="$2-$((PORT + 9))"
            shift
            shift
            ;;
        -a | --auditor)
            AUDITOR=1
            shift
            ;;
        -u | --updater)
            UPDATER=1
            shift
            ;;
        -t | --type)
            AGENT_TYPE=$2
            shift
            shift
            ;;
        -n | --name)
            AGENT_NAME=$2
            shift
            shift
            ;;
        --multitenant)
            MULTITENANT=1
            shift
            ;;
        -h | --help)
            print_usage
            exit 1
            ;;
        -*)
            echo "Unknown option $1"
            usage
            exit 1
            ;;
    esac
done

# Catch incompatible flags
if [[ $MULTITENANT == 1 ]]; then
    if [[ $AUDITOR == 1 || $UPDATER == 1 ]]; then
        printf "Invalid combination, only Agents can have multitenancy activated!\n\n"
        print_usage
        exit 1
    fi
elif [[ $AUDITOR == 1 && $UPDATER == 1 ]]; then
    printf "Invalid combination, cannot be auditor and updater at same time!\n\n"
    print_usage
    exit 1
fi

DOCKER_FLAGS=(
    "--network=$DOCKER_NETWORK"
    "-e DOCKERHOST=$DOCKERHOST"
    "-e RUNMODE=$RUN_MODE"
)

if [[ $AUDITOR == 1 ]]; then
    # in case we have an auditor, we skip a lot of the default environments for the aries agents
    AGENT_NAME=auditor
    AGENT_FILE="$AGENT_NAME"
    # we need to build each time, so changed files get copied over
    $DOCKER build -t auditor:latest -f docker/auditor.dockerfile . || exit 1
elif [[ $UPDATER == 1 ]]; then
    AGENT_NAME=updater
    AGENT_FILE="$AGENT_NAME"
    # TODO: (aver) remove hardfixed port
    PORT=8080
    # we need to build each time, so changed files get copied over
    $DOCKER build -t updater:latest -f docker/updater.dockerfile . || exit 1
else
    AGENT_FILE="agents.$AGENT_TYPE"
    DOCKER_FLAGS+=(
        "-e LEDGER_URL=$LEDGER_URL"
        "-e GENESIS_URL=$GENESIS_URL"
        "-e POSTGRES=1"
        "-p 0.0.0.0:$PORTRANGE:$PORTRANGE"
    )
    ARIES_FLAGS=(
        "--wallet-type askar"
        "--did-exchange"
        "--reuse-connections"
        "--revocation"
        "--ident=$AGENT_NAME"
        "--port $PORT"
    )
    if [[ $MULTITENANT == 1 ]]; then
        ARIES_FLAGS+=("--multitenant")
    fi
    # we need to build each time, so changed files get copied over
    $DOCKER build -t $DOCKER_IMAGE_NAME -f docker/Dockerfile . || exit 1
fi

# shellcheck disable=SC2048,SC2086
$DOCKER container run --rm -it \
    ${DOCKER_FLAGS[*]} \
    $DOCKER_IMAGE_NAME "$AGENT_FILE" \
    ${ARIES_FLAGS[*]}
